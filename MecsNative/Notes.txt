Components to do:
=================

* [x] General vector
* [x] Vector macros
* [x] Hash map for pointer types
* [x] Dictionary for simple types
* [x] Tree structure
* [x] Macros for hash map
* [x] Macros for tree
* [x] Mutable string (Vector of char + manipulation tools -- including hashing)
* [x] Change all structs to use anon types (move alloc to pointer return)
* [x] Queue: Dequeue (enqueue == push). (Could do 'push-left' at some point)
* [x] Add optimised sorting to vector
* [x] Fixed point real? (imported)
* [x] Bring heap in from scan-line experiments (and generalise)
* [x] Tagged data format reader for 32-bit cpu
* [x] String-to-num parsing
* [x] Allow containers to have a target Arena embedded into them (optional)

* [ ] Extend numeric types (use 56 bits of params+data for truncated `double`?)
  * [ ] Handle parsing, including scientific notation
  * [ ] Investigate a reduction of ( http://dec64.com/ ) as a single number type -- bottom 32 bits in tag data, exponent and remaining bits in tag params.

Input handling:
---------------

* [x] File system abstraction
* [x] Improve filesystem to allow non-byte sized vectors?
* [ ] Hunt down and fix compiler and parser leaks (relatively low priority)
* [x] Convert parser
* [x] Convert compiler
  * [x] tag code write
  * [x] scope (vector of hashmaps)
  * [x] context
  * [x] desugar
  * [ ] optimisations
  * [ ] symbol output (for debug)
    * [ ] line to tag-code mapping

The machine:
------------

* [ ] Try introducing C++ namespacing?
* [x] TagCode reader (fix byte order)
* [x] Convert runtime
  * [ ] Add breakpoints
* [ ] Syntax hiliting editor (caret in the parser and extended AST)
* [ ] Debug symbols file and reader


Actor model stuff:
------------------

* [x] Arenas (once implemented, wrap the parser, compiler, etc in arena allocater to ensure complete cleanup)
    * [x] Remove stdlib malloc/free and replace 
    * [x] Fix arena/zone naming consistency in the allocator code
    * [x] Per-instance arenas for containers? (so we can be thread safe-ish)
* [ ] Serialisation & hashing (will help escape arenas)
* [ ] Message queues
* [ ] Scheduler

Garbage collector:
------------------

* [ ] periodically look for 'potential garbage' names in the running scope. If not found, deallocate
* [ ] extend 'potential garbage' to hold a list instead of single refs
* [ ] ensure all allocated objects go into the scope (i.e. child data of complex types. Should get a hidden unique name?)
* [ ] maybe have 'destroy&recreate' for actors?
